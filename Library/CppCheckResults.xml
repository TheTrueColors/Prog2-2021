<?xml version="1.0" encoding="UTF-8" ?>
<results version="2">
    <cppcheck version="2.4.1" />
    <errors>
        <error id="syntaxError" severity="error" msg="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language.">
            <location file0="include\Author.h" file="include\Author.h" line="8" column="1" />
        </error>
        <error id="syntaxError" severity="error" msg="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language.">
            <location file0="include\AuthorList.h" file="include\Author.h" line="8" column="1" />
        </error>
        <error id="syntaxError" severity="error" msg="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language.">
            <location file0="include\Book.h" file="include\Author.h" line="8" column="1" />
        </error>
        <error id="syntaxError" severity="error" msg="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;using namespace std&apos; is invalid C code. Use --std or --language to configure the language.">
            <location file0="include\Library.h" file="include\Author.h" line="8" column="1" />
        </error>
        <error id="syntaxError" severity="error" msg="Code &apos;template&lt;...&apos; is invalid C code. Use --std or --language to configure the language." verbose="Code &apos;template&lt;...&apos; is invalid C code. Use --std or --language to configure the language.">
            <location file0="include\Node.h" file="include\Node.h" line="4" column="1" />
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;AuthorList&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;AuthorList&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="main.cpp" file="include\AuthorList.h" line="19" column="9" />
            <symbol>AuthorList</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;AuthorList&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;AuthorList&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="main.cpp" file="include\AuthorList.h" line="19" column="9" />
            <symbol>AuthorList</symbol>
        </error>
        <error id="noCopyConstructor" severity="warning" msg="Class &apos;Library&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Library&apos; does not have a copy constructor which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="main.cpp" file="include\Library.h" line="20" column="9" />
            <symbol>Library</symbol>
        </error>
        <error id="noOperatorEq" severity="warning" msg="Class &apos;Library&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." verbose="Class &apos;Library&apos; does not have a operator= which is recommended since it has dynamic memory/resource allocation(s)." cwe="398">
            <location file0="main.cpp" file="include\Library.h" line="20" column="9" />
            <symbol>Library</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Node &lt; Author &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Node &lt; Author &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="main.cpp" file="include\Node.h" line="13" column="5" />
            <symbol>Node &lt; Author &gt;</symbol>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;Node &lt; Book &gt;&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;Node &lt; Book &gt;&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file0="main.cpp" file="include\Node.h" line="13" column="5" />
            <symbol>Node &lt; Book &gt;</symbol>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &apos;!cur&apos; is redundant or there is possible null pointer dereference: cur." verbose="Either the condition &apos;!cur&apos; is redundant or there is possible null pointer dereference: cur." cwe="476">
            <location file0="main.cpp" file="include\AuthorList.h" line="48" column="61" info="Null pointer dereference" />
            <location file0="main.cpp" file="include\AuthorList.h" line="51" column="6" info="Assuming that condition &apos;!cur&apos; is not redundant" />
            <symbol>cur</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;name&apos; shadows outer variable" verbose="Local variable &apos;name&apos; shadows outer variable" cwe="398">
            <location file0="main.cpp" file="include\Author.h" line="71" column="16" info="Shadow variable" />
            <location file0="main.cpp" file="include\Author.h" line="13" column="12" info="Shadowed declaration" />
            <symbol>name</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;surname&apos; shadows outer variable" verbose="Local variable &apos;surname&apos; shadows outer variable" cwe="398">
            <location file0="main.cpp" file="include\Author.h" line="71" column="22" info="Shadow variable" />
            <location file0="main.cpp" file="include\Author.h" line="14" column="12" info="Shadowed declaration" />
            <symbol>surname</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;nameA&apos; shadows outer variable" verbose="Local variable &apos;nameA&apos; shadows outer variable" cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="124" column="22" info="Shadow variable" />
            <location file0="main.cpp" file="include\Book.h" line="17" column="12" info="Shadowed declaration" />
            <symbol>nameA</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;surnameA&apos; shadows outer variable" verbose="Local variable &apos;surnameA&apos; shadows outer variable" cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="124" column="28" info="Shadow variable" />
            <location file0="main.cpp" file="include\Book.h" line="17" column="19" info="Shadowed declaration" />
            <symbol>surnameA</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;title&apos; shadows outer variable" verbose="Local variable &apos;title&apos; shadows outer variable" cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="124" column="37" info="Shadow variable" />
            <location file0="main.cpp" file="include\Book.h" line="14" column="12" info="Shadowed declaration" />
            <symbol>title</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;genre&apos; shadows outer variable" verbose="Local variable &apos;genre&apos; shadows outer variable" cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="124" column="48" info="Shadow variable" />
            <location file0="main.cpp" file="include\Book.h" line="16" column="12" info="Shadowed declaration" />
            <symbol>genre</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Author.h" line="18" column="19" />
            <symbol>name</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;surname&apos; should be passed by const reference." verbose="Parameter &apos;surname&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Author.h" line="18" column="32" />
            <symbol>surname</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;date_birth&apos; should be passed by const reference." verbose="Parameter &apos;date_birth&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Author.h" line="18" column="48" />
            <symbol>date_birth</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Author.h" line="36" column="25" />
            <symbol>name</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;surname&apos; should be passed by const reference." verbose="Parameter &apos;surname&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Author.h" line="42" column="28" />
            <symbol>surname</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;date_birth&apos; should be passed by const reference." verbose="Parameter &apos;date_birth&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Author.h" line="48" column="25" />
            <symbol>date_birth</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;name&apos; should be passed by const reference." verbose="Parameter &apos;name&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\AuthorList.h" line="46" column="33" />
            <symbol>name</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;surname&apos; should be passed by const reference." verbose="Parameter &apos;surname&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\AuthorList.h" line="46" column="46" />
            <symbol>surname</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;title&apos; should be passed by const reference." verbose="Parameter &apos;title&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="22" column="17" />
            <symbol>title</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;nameA&apos; should be passed by const reference." verbose="Parameter &apos;nameA&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="22" column="31" />
            <symbol>nameA</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;surnameA&apos; should be passed by const reference." verbose="Parameter &apos;surnameA&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="22" column="45" />
            <symbol>surnameA</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;genre&apos; should be passed by const reference." verbose="Parameter &apos;genre&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="22" column="79" />
            <symbol>genre</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;published&apos; should be passed by const reference." verbose="Parameter &apos;published&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="22" column="93" />
            <symbol>published</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;title&apos; should be passed by const reference." verbose="Parameter &apos;title&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="31" column="26" />
            <symbol>title</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;genre&apos; should be passed by const reference." verbose="Parameter &apos;genre&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="37" column="26" />
            <symbol>genre</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;date&apos; should be passed by const reference." verbose="Parameter &apos;date&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="49" column="25" />
            <symbol>date</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;surnameA&apos; should be passed by const reference." verbose="Parameter &apos;surnameA&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="95" column="29" />
            <symbol>surnameA</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;nameA&apos; should be passed by const reference." verbose="Parameter &apos;nameA&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="100" column="26" />
            <symbol>nameA</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;value&apos; should be passed by const reference." verbose="Parameter &apos;value&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Node.h" line="13" column="15" />
            <symbol>value</symbol>
        </error>
        <error id="passedByValue" severity="performance" msg="Function parameter &apos;value&apos; should be passed by const reference." verbose="Parameter &apos;value&apos; is passed by value. It could be passed as a const reference which is usually faster and recommended in C++." cwe="398">
            <location file0="main.cpp" file="include\Node.h" line="16" column="21" />
            <symbol>value</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;aList&apos; can be declared with const" verbose="Parameter &apos;aList&apos; can be declared with const" cwe="398">
            <location file0="main.cpp" file="include\Book.h" line="90" column="30" info="Parameter &apos;aList&apos; can be declared with const" />
            <symbol>aList</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;name&apos; is assigned a value that is never used." verbose="Variable &apos;name&apos; is assigned a value that is never used." cwe="563">
            <location file0="main.cpp" file="include\Book.h" line="110" column="14" />
            <symbol>name</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;surname&apos; is assigned a value that is never used." verbose="Variable &apos;surname&apos; is assigned a value that is never used." cwe="563">
            <location file0="main.cpp" file="include\Book.h" line="111" column="17" />
            <symbol>surname</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;a&apos; is assigned a value that is never used." verbose="Variable &apos;a&apos; is assigned a value that is never used." cwe="563">
            <location file0="main.cpp" file="include\Book.h" line="114" column="26" />
            <symbol>a</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config." />
    </errors>
</results>
